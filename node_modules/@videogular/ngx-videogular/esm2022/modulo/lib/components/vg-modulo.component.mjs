import { Component, ElementRef, Input, ViewChild } from "@angular/core";
import { Gondolo } from "../utils/modulo";
import * as i0 from "@angular/core";
class VgModuloComponent {
    startVisualizer() {
        if (!this._audioAnalyser) {
            this._audioAnalyser = new Gondolo(this.audioElement);
            const { width, height } = this.moduloConfig.dimensions;
            const canvasElement = this.waveCanvas.nativeElement;
            this._ctx = canvasElement.getContext("2d");
            canvasElement.width = width;
            canvasElement.height = height;
        }
        this.update();
    }
    update() {
        const audioFreq = this._audioAnalyser.waveform();
        const { fillStyle, strokeStyle, lineWidth, scaleFactor } = this.moduloConfig;
        const { width, height } = this.waveCanvas.nativeElement;
        // Clear canvas
        this._ctx.fillStyle = fillStyle;
        this._ctx.fillRect(0, 0, width, height);
        this._ctx.strokeStyle = strokeStyle;
        this._ctx.lineWidth = lineWidth;
        // Draw frequency lines
        this._ctx.beginPath();
        this._ctx.moveTo(0, height / 2 - audioFreq[0] * scaleFactor);
        for (let i = 0; i < audioFreq.length; i++) {
            this._ctx.lineTo((width / audioFreq.length) * i, height / 2 - audioFreq[i] * scaleFactor);
        }
        this._ctx.moveTo(0, height / 2 + audioFreq[0] * scaleFactor);
        for (let i = 0; i < audioFreq.length; i++) {
            this._ctx.lineTo((width / audioFreq.length) * i, height / 2 + audioFreq[i] * scaleFactor);
        }
        this._ctx.stroke();
        window.requestAnimationFrame(() => this.update());
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VgModuloComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    /** @nocollapse */ static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.1", type: VgModuloComponent, selector: "vg-modulo", inputs: { moduloConfig: "moduloConfig", audioElement: "audioElement" }, viewQueries: [{ propertyName: "waveCanvas", first: true, predicate: ["waveCanvas"], descendants: true }], ngImport: i0, template: "<canvas #waveCanvas></canvas>\n" }); }
}
export { VgModuloComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VgModuloComponent, decorators: [{
            type: Component,
            args: [{ selector: "vg-modulo", template: "<canvas #waveCanvas></canvas>\n" }]
        }], propDecorators: { moduloConfig: [{
                type: Input
            }], audioElement: [{
                type: Input
            }], waveCanvas: [{
                type: ViewChild,
                args: ["waveCanvas", { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbW9kdWxvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4LXZpZGVvZ3VsYXIvbW9kdWxvL3NyYy9saWIvY29tcG9uZW50cy92Zy1tb2R1bG8uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3gtdmlkZW9ndWxhci9tb2R1bG8vc3JjL2xpYi9jb21wb25lbnRzL3ZnLW1vZHVsby5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFFMUMsTUFJYSxpQkFBaUI7SUFTckIsZUFBZTtRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUN4QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUVyRCxNQUFNLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDO1lBQ3JELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1lBRXBELElBQUksQ0FBQyxJQUFJLEdBQUcsYUFBYSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUUzQyxhQUFhLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUM1QixhQUFhLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUMvQjtRQUVELElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sTUFBTTtRQUNYLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakQsTUFBTSxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0UsTUFBTSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQztRQUV0RCxlQUFlO1FBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRXhDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFFaEMsdUJBQXVCO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLE1BQU0sR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDO1FBRTdELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUNkLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQzlCLE1BQU0sR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FDeEMsQ0FBQztTQUNIO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLE1BQU0sR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDO1FBRTdELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUNkLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQzlCLE1BQU0sR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FDeEMsQ0FBQztTQUNIO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUVuQixNQUFNLENBQUMscUJBQXFCLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDcEQsQ0FBQztpSUE1RFUsaUJBQWlCO3FIQUFqQixpQkFBaUIsbU9DUjlCLGlDQUNBOztTRE9hLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQUo3QixTQUFTOytCQUNFLFdBQVc7OEJBT1osWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxZQUFZO3NCQUFwQixLQUFLO2dCQUVzQyxVQUFVO3NCQUFyRCxTQUFTO3VCQUFDLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTW9kdWxvQ29uZmlnIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9tb2R1bG8tY29uZmlnLmludGVyZmFjZSc7XG5pbXBvcnQgeyBHb25kb2xvIH0gZnJvbSBcIi4uL3V0aWxzL21vZHVsb1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwidmctbW9kdWxvXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vdmctbW9kdWxvLmNvbXBvbmVudC5odG1sXCIsXG59KVxuZXhwb3J0IGNsYXNzIFZnTW9kdWxvQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfYXVkaW9BbmFseXNlcjogR29uZG9sbztcbiAgcHJpdmF0ZSBfY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG5cbiAgQElucHV0KCkgbW9kdWxvQ29uZmlnOiBNb2R1bG9Db25maWc7XG4gIEBJbnB1dCgpIGF1ZGlvRWxlbWVudDogSFRNTEF1ZGlvRWxlbWVudDtcblxuICBAVmlld0NoaWxkKFwid2F2ZUNhbnZhc1wiLCB7IHN0YXRpYzogZmFsc2UgfSkgd2F2ZUNhbnZhczogRWxlbWVudFJlZjxIVE1MQ2FudmFzRWxlbWVudD47XG5cbiAgcHVibGljIHN0YXJ0VmlzdWFsaXplcigpIHtcbiAgICBpZiAoIXRoaXMuX2F1ZGlvQW5hbHlzZXIpIHtcbiAgICAgIHRoaXMuX2F1ZGlvQW5hbHlzZXIgPSBuZXcgR29uZG9sbyh0aGlzLmF1ZGlvRWxlbWVudCk7XG5cbiAgICAgIGNvbnN0IHt3aWR0aCwgaGVpZ2h0fSA9IHRoaXMubW9kdWxvQ29uZmlnLmRpbWVuc2lvbnM7XG4gICAgICBjb25zdCBjYW52YXNFbGVtZW50ID0gdGhpcy53YXZlQ2FudmFzLm5hdGl2ZUVsZW1lbnQ7XG5cbiAgICAgIHRoaXMuX2N0eCA9IGNhbnZhc0VsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG4gICAgICBjYW52YXNFbGVtZW50LndpZHRoID0gd2lkdGg7XG4gICAgICBjYW52YXNFbGVtZW50LmhlaWdodCA9IGhlaWdodDtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZSgpIHtcbiAgICBjb25zdCBhdWRpb0ZyZXEgPSB0aGlzLl9hdWRpb0FuYWx5c2VyLndhdmVmb3JtKCk7XG4gICAgY29uc3Qge2ZpbGxTdHlsZSwgc3Ryb2tlU3R5bGUsIGxpbmVXaWR0aCwgc2NhbGVGYWN0b3J9ID0gdGhpcy5tb2R1bG9Db25maWc7XG4gICAgY29uc3Qge3dpZHRoLCBoZWlnaHR9ID0gdGhpcy53YXZlQ2FudmFzLm5hdGl2ZUVsZW1lbnQ7XG5cbiAgICAvLyBDbGVhciBjYW52YXNcbiAgICB0aGlzLl9jdHguZmlsbFN0eWxlID0gZmlsbFN0eWxlO1xuICAgIHRoaXMuX2N0eC5maWxsUmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcblxuICAgIHRoaXMuX2N0eC5zdHJva2VTdHlsZSA9IHN0cm9rZVN0eWxlO1xuICAgIHRoaXMuX2N0eC5saW5lV2lkdGggPSBsaW5lV2lkdGg7XG5cbiAgICAvLyBEcmF3IGZyZXF1ZW5jeSBsaW5lc1xuICAgIHRoaXMuX2N0eC5iZWdpblBhdGgoKTtcbiAgICB0aGlzLl9jdHgubW92ZVRvKDAsIGhlaWdodCAvIDIgLSBhdWRpb0ZyZXFbMF0gKiBzY2FsZUZhY3Rvcik7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF1ZGlvRnJlcS5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5fY3R4LmxpbmVUbyhcbiAgICAgICAgKHdpZHRoIC8gYXVkaW9GcmVxLmxlbmd0aCkgKiBpLFxuICAgICAgICBoZWlnaHQgLyAyIC0gYXVkaW9GcmVxW2ldICogc2NhbGVGYWN0b3JcbiAgICAgICk7XG4gICAgfVxuXG4gICAgdGhpcy5fY3R4Lm1vdmVUbygwLCBoZWlnaHQgLyAyICsgYXVkaW9GcmVxWzBdICogc2NhbGVGYWN0b3IpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdWRpb0ZyZXEubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuX2N0eC5saW5lVG8oXG4gICAgICAgICh3aWR0aCAvIGF1ZGlvRnJlcS5sZW5ndGgpICogaSxcbiAgICAgICAgaGVpZ2h0IC8gMiArIGF1ZGlvRnJlcVtpXSAqIHNjYWxlRmFjdG9yXG4gICAgICApO1xuICAgIH1cblxuICAgIHRoaXMuX2N0eC5zdHJva2UoKTtcblxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy51cGRhdGUoKSk7XG4gIH1cbn1cbiIsIjxjYW52YXMgI3dhdmVDYW52YXM+PC9jYW52YXM+XG4iXX0=