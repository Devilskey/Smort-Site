import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
class VgUtilsService {
    /**
     * Inspired by Paul Irish
     * https://gist.github.com/paulirish/211209
     */
    static getZIndex() {
        let zIndex = 1;
        let elementZIndex;
        const tags = document.getElementsByTagName('*');
        for (let i = 0, l = tags.length; i < l; i++) {
            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);
            if (elementZIndex > zIndex) {
                zIndex = elementZIndex + 1;
            }
        }
        return zIndex;
    }
    // Very simple mobile detection, not 100% reliable
    static isMobileDevice() {
        // return (
        //   typeof window.screen.orientation !== 'undefined' ||
        //   navigator.userAgent.indexOf('IEMobile') !== -1
        // );
        // window.orientation is deprecated and we should use window.screen.orientation
        return (typeof window.orientation !== 'undefined' ||
            navigator.userAgent.indexOf('IEMobile') !== -1);
    }
    static isiOSDevice() {
        return ((navigator.userAgent.match(/ip(hone|ad|od)/i) ||
            VgUtilsService.isIpadOS()) &&
            !navigator.userAgent.match(/(iemobile)[\/\s]?([\w\.]*)/i));
    }
    static isIpadOS() {
        return (navigator.maxTouchPoints &&
            navigator.maxTouchPoints > 2 &&
            /MacIntel/.test(navigator.platform));
    }
    static isCordova() {
        return (document.URL.indexOf('http://') === -1 &&
            document.URL.indexOf('https://') === -1);
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VgUtilsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VgUtilsService, providedIn: 'root' }); }
}
export { VgUtilsService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VgUtilsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctdXRpbHMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4LXZpZGVvZ3VsYXIvY29yZS9zcmMvbGliL3NlcnZpY2VzL3ZnLXV0aWxzL3ZnLXV0aWxzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0MsTUFHYSxjQUFjO0lBQ3pCOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxTQUFTO1FBQ2QsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxhQUFxQixDQUFDO1FBRTFCLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVoRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNDLGFBQWEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRTFFLElBQUksYUFBYSxHQUFHLE1BQU0sRUFBRTtnQkFDMUIsTUFBTSxHQUFHLGFBQWEsR0FBRyxDQUFDLENBQUM7YUFDNUI7U0FDRjtRQUVELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxrREFBa0Q7SUFDbEQsTUFBTSxDQUFDLGNBQWM7UUFDbkIsV0FBVztRQUNYLHdEQUF3RDtRQUN4RCxtREFBbUQ7UUFDbkQsS0FBSztRQUVMLCtFQUErRTtRQUMvRSxPQUFPLENBQ0wsT0FBTyxNQUFNLENBQUMsV0FBVyxLQUFLLFdBQVc7WUFDekMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQy9DLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLFdBQVc7UUFDaEIsT0FBTyxDQUNMLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUM7WUFDN0MsY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQzFCLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsNkJBQTZCLENBQUMsQ0FDMUQsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU8sQ0FDTCxTQUFTLENBQUMsY0FBYztZQUN4QixTQUFTLENBQUMsY0FBYyxHQUFHLENBQUM7WUFDNUIsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQ3BDLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLFNBQVM7UUFDZCxPQUFPLENBQ0wsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3RDLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUN4QyxDQUFDO0lBQ0osQ0FBQztpSUF6RFUsY0FBYztxSUFBZCxjQUFjLGNBRmIsTUFBTTs7U0FFUCxjQUFjOzJGQUFkLGNBQWM7a0JBSDFCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVmdVdGlsc1NlcnZpY2Uge1xuICAvKipcbiAgICogSW5zcGlyZWQgYnkgUGF1bCBJcmlzaFxuICAgKiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9wYXVsaXJpc2gvMjExMjA5XG4gICAqL1xuICBzdGF0aWMgZ2V0WkluZGV4KCk6IG51bWJlciB7XG4gICAgbGV0IHpJbmRleCA9IDE7XG4gICAgbGV0IGVsZW1lbnRaSW5kZXg6IG51bWJlcjtcblxuICAgIGNvbnN0IHRhZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnKicpO1xuXG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSB0YWdzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgZWxlbWVudFpJbmRleCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRhZ3NbaV0pWyd6LWluZGV4J10sIDEwKTtcblxuICAgICAgaWYgKGVsZW1lbnRaSW5kZXggPiB6SW5kZXgpIHtcbiAgICAgICAgekluZGV4ID0gZWxlbWVudFpJbmRleCArIDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHpJbmRleDtcbiAgfVxuXG4gIC8vIFZlcnkgc2ltcGxlIG1vYmlsZSBkZXRlY3Rpb24sIG5vdCAxMDAlIHJlbGlhYmxlXG4gIHN0YXRpYyBpc01vYmlsZURldmljZSgpIHtcbiAgICAvLyByZXR1cm4gKFxuICAgIC8vICAgdHlwZW9mIHdpbmRvdy5zY3JlZW4ub3JpZW50YXRpb24gIT09ICd1bmRlZmluZWQnIHx8XG4gICAgLy8gICBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0lFTW9iaWxlJykgIT09IC0xXG4gICAgLy8gKTtcblxuICAgIC8vIHdpbmRvdy5vcmllbnRhdGlvbiBpcyBkZXByZWNhdGVkIGFuZCB3ZSBzaG91bGQgdXNlIHdpbmRvdy5zY3JlZW4ub3JpZW50YXRpb25cbiAgICByZXR1cm4gKFxuICAgICAgdHlwZW9mIHdpbmRvdy5vcmllbnRhdGlvbiAhPT0gJ3VuZGVmaW5lZCcgfHxcbiAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignSUVNb2JpbGUnKSAhPT0gLTFcbiAgICApO1xuICB9XG5cbiAgc3RhdGljIGlzaU9TRGV2aWNlKCkge1xuICAgIHJldHVybiAoXG4gICAgICAobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaXAoaG9uZXxhZHxvZCkvaSkgfHwgXG4gICAgICBWZ1V0aWxzU2VydmljZS5pc0lwYWRPUygpKSAmJlxuICAgICAgIW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goLyhpZW1vYmlsZSlbXFwvXFxzXT8oW1xcd1xcLl0qKS9pKVxuICAgICk7XG4gIH1cblxuICBzdGF0aWMgaXNJcGFkT1MoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyAmJiBcbiAgICAgIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDIgJiZcbiAgICAgIC9NYWNJbnRlbC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pXG4gICAgKTtcbiAgfVxuXG4gIHN0YXRpYyBpc0NvcmRvdmEoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIGRvY3VtZW50LlVSTC5pbmRleE9mKCdodHRwOi8vJykgPT09IC0xICYmXG4gICAgICBkb2N1bWVudC5VUkwuaW5kZXhPZignaHR0cHM6Ly8nKSA9PT0gLTFcbiAgICApO1xuICB9XG59XG4iXX0=